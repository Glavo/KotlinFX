buildscript {
    ext.kotlin_version = '1.3.31'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.2'
    }
}

allprojects {
    apply plugin: 'com.google.osdetector'
    ext.openjfx_version = '11.0.2'

    group 'org.glavo'
    version '0.1.7'

    switch (osdetector.os) {
        case "linux":
            ext.osName = "linux"
            break
        case "windows":
            ext.osName = "win"
            break
        case "osx":
            ext.osName = "mac"
            break
        default:
            throw new UnsupportedOperationException()
    }

    ext.javaFX = { moduleName ->
        return "org.openjfx:javafx-$moduleName:${openjfx_version}:${osName}"
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceSets {
        main {
            kotlin {
                srcDirs = ['src/main/module', 'src/main/kotlin']
            }
        }
        java9 {
            compileClasspath += main.output
            java {
                srcDirs = ['src/main/module']
            }
        }
    }

    compileJava {
        sourceCompatibility = 8
        targetCompatibility = 8
    }

    compileJava9Java {
        sourceCompatibility = 9
        targetCompatibility = 9
        dependsOn(compileKotlin)
        doFirst {
            options.compilerArgs = ['--module-path', classpath.asPath]
        }
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = '1.8'   
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = '1.8'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        testCompile group: 'junit', name: 'junit', version: '4.12'

        java9CompileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        //java9CompileOnly files(sourceSets.main.output.classesDirs) { builtBy compileJava }
    }

    jar {
        into('META-INF/versions/9') {
            from sourceSets.java9.output
        }
        manifest.attributes(
                'Multi-Release': 'true'
        )
    }
}
